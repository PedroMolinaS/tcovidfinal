<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 497 497" style="enable-background:new 0 0 512 512" xml:space="preserve"><g><script>
        // Catch errors if signal is already set by user agent or other extension
        try {
            Object.defineProperty(navigator, 'globalPrivacyControl', {
                value: false,
                enumerable: true
            })
            // Remove script tag after execution
            document.currentScript.parentElement.removeChild(document.currentScript)
        } catch (e) {}</script><g xmlns="http://www.w3.org/2000/svg"><path d="m248.5 0v497c4.966 0 9.355-2.424 12.085-6.141.021 0 140.047-191.036 140.047-191.036 22.853-31.196 36.368-69.679 36.368-111.323 0-104.106-84.394-188.5-188.5-188.5z" fill="#f0224e" data-original="#f0224e" style=""/><path d="m258.662 490.859c.017 0 117.759-191.036 117.759-191.036 19.215-31.196 30.579-69.679 30.579-111.323 0-104.106-70.963-188.5-158.5-188.5-104.106 0-188.5 84.394-188.5 188.5 0 41.644 13.515 80.127 36.383 111.322-.016 0 140.011 191.036 140.011 191.036 2.751 3.718 7.14 6.141 12.106 6.141 4.176.001 7.866-2.423 10.162-6.14z" fill="#ff4c50" data-original="#ff4c50" style=""/><circle cx="248.5" cy="188.5" fill="#ffffff" r="128.5" data-original="#ffffff" style=""/><path d="m248.5 90v90c24.853 0 45-20.147 45-45s-20.147-45-45-45z" fill="#1b74d6" data-original="#1b74d6" style=""/><path d="m263.5 135c0-24.853-6.716-45-15-45-24.853 0-45 20.147-45 45s20.147 45 45 45c8.284 0 15-20.147 15-45z" fill="#1e8aff" data-original="#1e8aff" style=""/><path d="m195.996 210c-16.5 0-30 13.5-30 30v2.316c7.756 11.867 18.005 21.955 30 29.529l30-61.845z" fill="#54a5ff" data-original="#54a5ff" style=""/><path d="m301.004 210h-30l30 61.845c11.995-7.574 22.244-17.662 30-29.529v-2.316c0-16.5-13.5-30-30-30z" fill="#1b74d6" data-original="#1b74d6" style=""/><path d="m271.004 210h-45.009c-16.5 0-30 13.5-30 30v31.845c15.199 9.597 33.201 15.155 52.505 15.155s37.306-5.558 52.504-15.155v-31.845c0-16.5-13.5-30-30-30z" fill="#1e8aff" data-original="#1e8aff" style=""/></g><script>try {
                        Object.defineProperty(screen, "availTop", { value: 0 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availLeft", { value: 0 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availWidth", { value: 1280 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availHeight", { value: 720 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "colorDepth", { value: 24 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "pixelDepth", { value: 24 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "keyboard", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "hardwareConcurrency", { value: 8 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "deviceMemory", { value: 8 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "webkitTemporaryStorage", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "webkitPersistentStorage", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "appVersion", { value: "5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36" });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "doNotTrack", { value: null });
                    } catch (e) {}
                    
                navigator.getBattery = function getBattery () {
                let battery = {"charging":true,"chargingTime":0,"dischargingTime":null,"level":1}
            
                try {
                    Object.defineProperty(battery, 'onchargingchange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'onchargingtimechange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'ondischargingtimechange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'onlevelchange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                    battery.addEventListener = function addEventListener () {
                        return
                    }
                
                return Promise.resolve(battery)
                }
            
            try {
                window.screenY = 0
            } catch (e) { }
        
            try {
                window.screenTop = 0
            } catch (e) { }
        
            try {
                window.top.window.outerHeight = window.screen.height
            } catch (e) { }
        
            try {
                window.screenX = 0
            } catch (e) { }
        
            try {
                window.screenLeft = 0
            } catch (e) { }
        
            try {
                window.top.window.outerWidth = window.screen.width
            } catch (e) { }
        </script></g></svg>
