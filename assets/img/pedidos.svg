<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" version="1.1" width="512" height="512" x="0" y="0" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512" xml:space="preserve" class=""><g><script>
        // Catch errors if signal is already set by user agent or other extension
        try {
            Object.defineProperty(navigator, 'globalPrivacyControl', {
                value: false,
                enumerable: true
            })
            // Remove script tag after execution
            document.currentScript.parentElement.removeChild(document.currentScript)
        } catch (e) {}</script><g xmlns="http://www.w3.org/2000/svg"><g><path d="m511.814 130.172c-.014-5.513-4.487-9.975-10-9.975h-151.09c-3.183 7.309-7.441 14.042-12.574 20h153.69l.134 52.1h-398.524l-6.747-52.1h151.808c-5.133-5.958-9.39-12.691-12.574-20h-142.1l-11.713-72.433c-.783-4.844-4.965-8.403-9.872-8.403h-52.252c-5.523 0-10 4.478-10 10s4.477 10 10 10h43.74l11.689 72.28 9.316 71.941c.001.009.003.018.004.027.002.016.004.032.006.048l23.845 173.822c2.455 17.893 17.367 31.529 35.067 32.402-8.168 9.779-13.098 22.412-13.098 36.188 0 30.958 24.895 56.144 55.495 56.144 30.601 0 55.496-25.186 55.496-56.144 0-13.755-4.915-26.37-13.061-36.143h122.943c-8.146 9.773-13.061 22.388-13.061 36.143 0 30.958 24.895 56.144 55.495 56.144 30.601 0 55.496-25.186 55.496-56.144 0-14.081-5.15-26.967-13.645-36.833 22.66-3.723 41.017-22.146 44.254-45.74l20.741-151.199h11.278c2.657 0 5.204-1.057 7.08-2.939 1.876-1.881 2.927-4.431 2.92-7.087zm-335.751 352.041c-19.572 0-35.495-16.214-35.495-36.144s15.923-36.143 35.495-36.143 35.496 16.214 35.496 36.143c0 19.93-15.924 36.144-35.496 36.144zm207.812 0c-19.572 0-35.495-16.214-35.495-36.144s15.923-36.143 35.495-36.143 35.496 16.214 35.496 36.143c0 19.93-15.923 36.144-35.496 36.144zm66.291-121.436c-2.28 16.617-16.421 29.148-32.894 29.148h-281.8c-8.539 0-15.872-6.52-17.058-15.166l-22.287-162.462h374.408z" fill="#020288" data-original="#020288" style="" class=""/></g><g><ellipse cx="288.331" cy="88.712" fill="#a4befc" rx="78.925" ry="78.925" transform="matrix(.707 -.707 .707 .707 21.722 229.864)" data-original="#a4fcc4" style="" class=""/><path d="m307.852 78.711h-9.522v-9.521c0-5.522-4.477-10-10-10s-10 4.478-10 10v9.521h-9.521c-5.523 0-10 4.478-10 10s4.477 10 10 10h9.521v9.521c0 5.522 4.477 10 10 10s10-4.478 10-10v-9.521h9.522c5.523 0 10-4.478 10-10s-4.477-10-10-10z" fill="#020288" data-original="#020288" style="" class=""/><g><path d="m164.713 357.345-10.615-116.189h59.461v116.189z" fill="#a4befc" data-original="#a4fcc4" style="" class=""/></g><g><path d="m226.744 274.827h116.189v48.846h-116.189z" fill="#a4befc" transform="matrix(0 1 -1 0 584.089 14.412)" data-original="#a4fcc4" style="" class=""/></g><g><path d="m356.118 357.345v-116.189h70.077l-21.231 116.189z" fill="#a4befc" data-original="#a4fcc4" style="" class=""/></g></g></g><script>try {
                        Object.defineProperty(screen, "availTop", { value: 0 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availLeft", { value: 0 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availWidth", { value: 1280 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "availHeight", { value: 1024 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "colorDepth", { value: 24 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(screen, "pixelDepth", { value: 24 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "keyboard", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "hardwareConcurrency", { value: 8 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "deviceMemory", { value: 8 });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "webkitTemporaryStorage", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "webkitPersistentStorage", { value: undefined });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "appVersion", { value: "5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4170.0 Safari/537.36 Edg/85.0.552.1" });
                    } catch (e) {}
                    try {
                        Object.defineProperty(navigator, "doNotTrack", { value: null });
                    } catch (e) {}
                    
                navigator.getBattery = function getBattery () {
                let battery = {"charging":true,"chargingTime":0,"dischargingTime":null,"level":1}
            
                try {
                    Object.defineProperty(battery, 'onchargingchange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'onchargingtimechange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'ondischargingtimechange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                try {
                    Object.defineProperty(battery, 'onlevelchange', {
                        enumerable: true,
                        configurable: false,
                        writable: false,
                        value: undefined
                    })
                } catch (e) {}
                
                    battery.addEventListener = function addEventListener () {
                        return
                    }
                
                return Promise.resolve(battery)
                }
            
            try {
                window.screenY = 3
            } catch (e) { }
        
            try {
                window.screenTop = 3
            } catch (e) { }
        
            try {
                window.top.window.outerHeight = 978
            } catch (e) { }
        
            try {
                window.screenX = 0
            } catch (e) { }
        
            try {
                window.screenLeft = 0
            } catch (e) { }
        
            try {
                window.top.window.outerWidth = 1274
            } catch (e) { }
        </script></g></svg>
